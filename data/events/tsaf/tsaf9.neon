parameters:
    events:
        tsaf9:
            appCond: or(regOpen(), role('admin'))
            # see soustredeni.neon
            requiredCond: or(and(neg(role('admin')),or(state('applied'),state('applied.nodsef'),state('spare'))), state('participated')) # povinné pro účastníka nebo pro všechny, když jsou účastnivší se

            person:
                person:
                    other_name:
                        required: true
                    family_name:
                        required: true
                person_info:
                    email:
                        required: true
                    phone:
                        required: %events.tsaf9.requiredCond%
                    id_number:
                        required: %events.tsaf9.requiredCond%
                    born:
                        required: %events.tsaf9.requiredCond%
                post_contact_d:
                    address:
                        required: %events.tsaf9.requiredCond%
                post_contact_p:
                    address:
                        required: false
            clothes:
                M_S: S pánské
                M_M: M pánské
                M_L: L pánské
                M_XL: XL pánské
                M_XXL: XXL pánské
                F_S: S dámské
                F_M: M dámské
                F_L: L dámské
                F_XL: XL dámské

events:
    tsaf9:
        event_type_id: 7
        eventYears: [9]
        formLayout: tsaf.form
        paramScheme:
            notifyBcc:
                default: tsaf@fykos.cz
            notifyFrom:
                default: Týden s experimentální fyzikou <tsaf@fykos.cz>
            capacity:
                default: 0

        baseMachines:
            PARTICIPANT_TSAF:
                service: @orm.event_participant.service

                states:
                    - auto.invited
                    - invited
                    - applied
                    - applied.nodsef
                    - spare
                    - participated
                    - rejected
                    - missed
                    - cancelled

                transitions:
                    # to invited
                    __init->invited:
                        condition: role('admin')
                        label: _('Pozvat účastníka')
                        onExecuted:
                            - FKSDB\Models\Events\Transitions\MailSender(tsaf/invited, .self)
                    auto.invited->invited: # this must be duplicate of __init->invited
                        condition: role('admin')
                        label: _('Pozvat účastníka')
                        onExecuted:
                            - FKSDB\Models\Events\Transitions\MailSender(tsaf/invited, .self)
                    # to spare
                    __init->spare:
                        condition: %events.tsaf9.appCond%
                        label: _('Přihlásit náhradníka')
                        onExecuted:
                            - FKSDB\Models\Events\Transitions\MailSender(confirmation, .self)
                    # to applied
                    __init->applied:
                        condition: and(role('admin'),le(count('applied'),parameter('capacity')))
                        label: _('Přihlásit účastníka')
                        onExecuted:
                            - FKSDB\Models\Events\Transitions\MailSender(confirmation, .self)
                    spare->applied:
                        condition: and(role('admin'),le(count('applied'),parameter('capacity')))
                        label: _('Potvrdit účastníka')
                        onExecuted:
                            - FKSDB\Models\Events\Transitions\MailSender(transition, self)
                    invited->applied:
                        condition: and(or(regOpen(),role('admin')),le(count('applied'),parameter('capacity')))
                        label: _('Potvrdit účast')
                        onExecuted:
                            - FKSDB\Models\Events\Transitions\MailSender(transition, self)
                    # to end-states
                    applied|applied.nodsef->participated:
                        condition: and(role('admin'),eventWas())
                        label: _('Prezentovat')
                    applied|applied.nodsef->missed:
                        condition: and(role('admin'),eventWas())
                        label: _('Nepřijel')
                        behaviorType: danger
                    invited->rejected:
                        condition: %events.tsaf9.appCond%
                        label: _('Odmítnout účast')
                        behaviorType: danger
                    # to cancelled/termination
                    auto.invited|invited|applied|applied.nodsef->cancelled:
                        condition: role('admin')
                        label: _('Zrušit přihlášku')
                        behaviorType: danger
                    spare->cancelled:
                        condition: role('admin')
                        label: _('Zrušit přihlášku')
                        behaviorType: danger
                    cancelled->__terminated:
                        condition: role('admin')
                        label: _('Smazat přihlášku')

                fields:
                    person_id:
                        label: _('Person')
                        required: true
                        modifiable: %events.tsaf9.appCond%
                        default: fromLogin
                        factory: RefPerson(%events.tsaf9.person%, email, or(state('__init'),role('admin')), role('admin'), false)
                    tshirt_size:
                        label: _('Jaké triko nosíš?')
                        required: %events.tsaf9.requiredCond%
                        factory: Chooser("Zvolit velikost", Options(%events.tsaf9.clothes%))
                    jumper_size:
                        label: _('Jakou mikinu nosíš?')
                        required: %events.tsaf9.requiredCond%
                        factory: Chooser("Zvolit velikost", Options(%events.tsaf9.clothes%))
                    health_restrictions:
                        label: _('Zdravotní omezení')
                        description: "Máš nějaká zdravotní omezení, která by tě mohla omezovat v průběhu akce nebo kvůli kterým by ses např. nemohl/a účastnit fyzicky náročných aktivit? Například různé alergie (a jejich projevy), cukrovka, epilepsie, dlouhodobější obtíže, … Bereš nějaké léky, ať už pravidelně, nebo v případě obtíží? Jaké to jsou? Jsou nějaké další informace ohledně tvého zdravotního stavu, co bychom měli vědět?"


            PARTICIPANT_DSEF:
                prototype: dsef23.PARTICIPANT_DSEF
                joinOn: person_id
                joinTo: person_id
                fields:
                    person_id:
                        modifiable: false
                        visible: false
                        required: false
                    e_dsef_group_id:
                        required: or(state('applied'),state('spare')) # state of the TSAF machine



        #
        #   MACHINE
        #   explanation: machine consists of several instances of base machines
        #
        machine:
            secondaryModelStrategy: FKSDB\Models\Events\Model\Holder\SecondaryModelStrategies\CarefulRewrite(['status'])
            baseMachines:
                participantTsaf:
                    bmName: PARTICIPANT_TSAF
                    label: _('TSAF')
                    required: true # default false, it's conjuction with fields requirement
                    primary: true # base machine states are propagated to the machine
                participantDsef:
                    bmName: PARTICIPANT_DSEF
                    label: _('DSEF')

            formAdjustments:
                - FKSDB\Models\Events\FormAdjustments\UniqueCheck('participant.person_id', "Zvolená osoba je již přihlášená.")
                - @events.privacyPolicy
                - @events.captcha

            processings:
                - @events.privacyPolicy
            joins:
                participantTsaf:
                    *->applied:
                        participantDsef: applied.tsaf
                    *->spare:
                        participantDsef: spare.tsaf
                    applied|applied.nodsef->cancelled:
                        participantDsef: applied.notsaf
                    spare->cancelled:
                        participantDsef: cancelled
                    *->__terminated:
                        participantDsef: __terminated

