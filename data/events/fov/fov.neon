parameters:
    events:
        fov:
            appCond: or(regOpen(), role('admin'))
            requiredCond: or(and(neg(role('admin')),or(state('applied'),state('interested'))), state('participated')) # povinné pro účastníka nebo pro všechny, když jsou účastnivší se
            person:
                person:
                    other_name:
                        required: true
                    family_name:
                        required: true
                person_history:
                    school_id:
                        required: state('participated')
                        description: "If you cannot find your school, email the webmaster."

events:
    fov:
        eventTypeIds: [16]
        #eventYears: [] # specify for which years this machine is valid, by default all years
        formLayout: fov.form
        machine:
                transitions:
                    __init->invited:
                        condition: role('admin')
                        label: _('Invite participant')
                        afterExecute:
                            - FKSDB\Models\Events\Transitions\MailSender(fov/invited)
                    auto.invited->invited: # this must be duplicate of __init->invited
                        condition: role('admin')
                        label: _('Invite participant')
                        afterExecute:
                            - FKSDB\Models\Events\Transitions\MailSender(fov/invited)
                    invited->applied:
                        condition: or(before(param('deadline')),role('admin'))
                        label: _('Confirm participation')
                    invited->rejected:
                        condition: or(before(param('deadline')),role('admin'))
                        label: _('Decline participation')
                        behaviorType: danger
                    applied->participated:
                        condition: and(role('admin'),eventWas())
                        label: _('Participated')
                    applied->missed:
                        condition: and(role('admin'),eventWas())
                        label: _('Missed')
                    invited|auto.invited|applied->cancelled:
                        condition: role('admin')
                        label: _('Cancel application')
        holder:
            fields:
                person_id:
                    label: _('Person')
                    required: true
                    modifiable: %events.fov.appCond%
                    default: null
                    factory: RefPerson(%events.fov.person%, email, role('admin'), role('admin'), false)
            modifiable: or(neg(or(state('participated'),state('missed'),state('rejected'))),role('admin'))
            formAdjustments:
                - FKSDB\Models\Events\FormAdjustments\UniqueCheck('participant.person_id', "The person selected is already applied.")
                - @events.privacyPolicy

            processings:
                - @events.privacyPolicy
