parameters:
    event_participant:
        states:
            applied: [badge : 'badge bg-color-1', label : 'Applied']
            applied.nodsef: [badge : 'badge bg-color-1', label : 'applied.nodsef']
            applied.notsaf: [badge : 'badge bg-color-1', label : 'applied.notsaf']
            applied.tsaf: [badge : 'badge bg-color-1', label : 'applied.tsaf']
            approved: [badge : 'badge bg-color-1', label : 'Approved']
            interested: [badge : 'badge bg-color-2', label : 'Interested']
            pending: [badge : 'badge bg-color-2', label : 'Pending']
            participated: [badge : 'badge bg-color-3', label : 'Participated']
            missed: [badge : 'badge bg-color-4', label : 'Missed']
            disqualified : [badge : 'badge bg-color-5', label : 'Disqualified']
            rejected : [badge : 'badge bg-color-6', label : 'Rejected']
            cancelled : [badge : 'badge bg-color-6', label : 'Cancelled']
            paid : [badge : 'badge bg-color-7', label : 'Paid']
            out_of_db: [badge : 'badge bg-color-8', label : 'Out of FKSDB']
            spare: [badge : 'badge bg-color-9', label : 'Spare']
            spare1: [badge : 'badge bg-color-9', label : 'spare1']
            spare2: [badge : 'badge bg-color-9', label : 'spare2']
            spare3: [badge : 'badge bg-color-9', label : 'spare3']
            spare.tsaf: [badge : 'badge bg-color-9', label : 'spare.tsaf']
            auto.spare: [badge : 'badge bg-color-9', label : 'auto.spare']
            invited: [badge : 'badge bg-color-10', label : 'Invited']
            invited1: [badge : 'badge bg-color-10', label : 'invited1']
            invited2: [badge : 'badge bg-color-10', label : 'invited2']
            invited3: [badge : 'badge bg-color-10', label : 'invited3']
            auto.invited: [badge : 'badge bg-color-10', label : 'auto.invited']


orm:
        address:
            service: FKSDB\Models\ORM\Services\ServiceAddress
            model: FKSDB\Models\ORM\Models\ModelAddress
        auth_token:
            service: FKSDB\Models\ORM\Services\ServiceAuthToken
            model: FKSDB\Models\ORM\Models\ModelAuthToken
        contest:
            service: FKSDB\Models\ORM\Services\ServiceContest
            model: FKSDB\Models\ORM\Models\ModelContest
            columnFactories:
                contest:
                   type: class
                   class: FKSDB\Models\ORM\Columns\Tables\Contest\ContestColumnFactory
                   title: _('Contest')
        contestant_base:
            service: FKSDB\Models\ORM\Services\ServiceContestant
            model: FKSDB\Models\ORM\Models\ModelContestant
            columnFactories:
                ct_id:
                    type: primaryKey
                    title: _(Contestant Id)
                year:
                    type: string
                    title: _(Year)
            linkFactories:
                edit:
                    destination: ':Org:Contestant:edit'
                    params:
                       contestId: contest_id
                       id: ct_id
                    title: Edit
        contest_year:
            service: FKSDB\Models\ORM\Services\ServiceContestYear
            model: FKSDB\Models\ORM\Models\ModelContestYear
        email_message:
            service: FKSDB\Models\ORM\Services\ServiceEmailMessage
            model: FKSDB\Models\ORM\Models\ModelEmailMessage
            columnFactories:
                email_message_id:
                    type: primaryKey
                    title: _(Message Id)
                recipient:
                    sender:
                    type: email
                    title: _(Recipient)
                sender:
                    type: email
                    title: _(Sender)
                reply_to:
                    type: email
                    title: _(Reply to)
                subject:
                    type: string
                    title: _(Subject)
                carbon_copy:
                    type: email
                    title: _(Cc)
                blind_carbon_copy:
                    type: email
                    title: _(Bcc)
                text:
                    type: string
                    title: _(Text)
                state:
                    type: state
                    title: _(State)
                    states:
                        saved: [badge :'badge bg-color-1', label: Saved]
                        waiting: [badge :'badge bg-color-2', label: Waiting]
                        sent: [badge :'badge bg-color-3', label: Sent]
                        failed: [badge :'badge bg-color-4', label: Failed]
                        canceled: [badge :'badge bg-color-6', label: Canceled]
             #created:
             #send:
        event:
            service: FKSDB\Models\ORM\Services\ServiceEvent
            model: FKSDB\Models\ORM\Models\ModelEvent
            columnFactories:
                event:
                    type: string
                    title: _(Event)
                    accessKey: name
                role:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Event\EventRole
                    title: _('Event role')
                event_id:
                    type: primaryKey
                    title: _('Event Id')
                parameters:
                    type: text
                    title: _(Parameters)
                    description: _('In Neon syntax, the scheme is specific for each event.')
                name:
                    type: string
                    title: _(Name)
                    description: _("For the camps, it is place.")
                    required: true
                begin:
                    type: dateTime
                    title: _(Event begin)
                    required: true
                end:
                    type: dateTime
                    title: _(Event end)
                    required: false
                    description: _('For one-day events it is identical to the beginning.')
                registration_begin:
                    type: dateTime
                    title:  _(Registration begin)
                registration_end:
                    type: dateTime
                    title: _(Registration end)
                report:
                    type: text
                    description: _(Summary of the event.)
                    title: _(Report)
                event_year:
                    type: int
                    title: _(Event year)
                    required: true
                    description: _('The year of an event must be unique for a given event type.')
                year:
                    type: int
                    title: _(Contest year)
                    omitInputField: true
                event_type:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Event\EventTypeColumnFactory
                    title: _('Event type')
                event_type_id:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Event\EventTypeColumnFactory
                    title: _('Event type')
                event_link:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Event\EventLink
                    title: _('Event')
            linkFactories:
                 application.list: FKSDB\Models\ORM\Links\ParticipantListLink
        event_org:
             service: FKSDB\Models\ORM\Services\ServiceEventOrg
             model: FKSDB\Models\ORM\Models\ModelEventOrg
             columnFactories:
                event_org_id:
                    accessKey: e_org_id
                    type: primaryKey
                    title:  _(Event org Id)
                note:
                    type: string
                    title: _(Note)
             linkFactories:
                 edit:
                    destination: ':Event:EventOrg:edit'
                    params:
                        eventId: event_id
                        id: e_org_id
                    title: Edit
                 detail:
                     destination: ':Event:EventOrg:detail'
                     params:
                         eventId: event_id
                         id: e_org_id
                     title: Detail
        event_participant:
             service: FKSDB\Models\ORM\Services\ServiceEventParticipant
             model: FKSDB\Models\ORM\Models\ModelEventParticipant
             columnFactories:
                team:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\EventParticipant\TeamColumnFactory
                    title: _('Team')
                status:
                    type: state
                    title: _(State)
                    states: %event_participant.states%
                created:
                    type: dateTime
                    title: _(Created event)
                swimmer:
                    type: logic
                    title: _(Swimmer)
                price:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\EventParticipant\PriceColumnFactory
                    title: _('Price')
                diet:
                    type: text
                    title: _(Diet)
                health_restrictions:
                    type: text
                    title:  _(Health restrictions)
                used_drugs:
                    type: text
                    title: _(Used drugs)
                note:
                    type: text
                    title: _(Note)
                tshirt_color:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\EventParticipant\TShirtColorColumnFactory
                    title: _('T-shirt color')
                tshirt_size:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\EventParticipant\TShirtSizeColumnFactory
                    title: _('T-shirt size')
                arrival_ticket:
                    type: logic
                    title: _(Arrival ticket)
                arrival_time:
                    type: time
                    title:  _(Arrival time)
                    format: %H:%I
                arrival_destination:
                    type: string
                    title: _('Arrival destination')
                departure_time:
                    type: time
                    title: _(Departure time)
                    format: %H:%I
                departure_destination:
                    type: string
                    title: _('Departure destination')
                departure_ticket:
                    type: logic
                    title: _(Departure ticket)
                event_participant_id:
                    type: primaryKey
                    title:  _(Event participant Id)
                lunch_count:
                    type: int
                    title: _('Number of baguettes for lunch')
             linkFactories:
                   detail: FKSDB\Models\ORM\Links\ParticipantDetailLink
                   edit: FKSDB\Models\ORM\Links\ApplicationEditLink
        event_type:
            service: FKSDB\Models\ORM\Services\ServiceEventType
            model: FKSDB\Models\ORM\Models\ModelEventType
        flag:
            service: FKSDB\Models\ORM\Services\ServiceFlag
            model: FKSDB\Models\ORM\Models\ModelFlag
        grant:
            service: FKSDB\Models\ORM\Services\ServiceGrant
            model: FKSDB\Models\ORM\Models\ModelGrant
        login:
            service: FKSDB\Models\ORM\Services\ServiceLogin
            model: FKSDB\Models\ORM\Models\ModelLogin
            columnFactories:
                login_id:
                    type: primaryKey
                    title: _(login Id)
                hash:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Login\HashColumnFactory
                    permissions: RESTRICT
                    title: _('Password')
                    omitInputField: true
                last_login:
                    type: dateTime
                    title: _(Last logged)
                login:
                    type: string
                    title: _(Login)
                    permission: RESTRICT
        org:
             service: FKSDB\Models\ORM\Services\ServiceOrg
             model: FKSDB\Models\ORM\Models\ModelOrg
             columnFactories:
                org_id:
                    type: primaryKey
                    title: _(Org Id)
                since:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Org\SinceColumnFactory
                    title: _('Since')
                until:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Org\UntilColumnFactory
                    title: _('Until')
                order:
                    type: class

                    class: FKSDB\Models\ORM\Columns\Tables\Org\OrderColumnFactory
                    description: _('Pro řazení v seznamu organizátorů')

                    title: _('Order')
                tex_signature:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Org\TexSignatureColumnFactory
                    title: _('Tex signature')
                domain_alias:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Org\DomainAliasColumnFactory
                    title: _('Domain alias')
                contribution:
                    type: string
                    title: _(Contribution)
                    description: _('For the hall of fame')
                role:
                    type: string
                    title: Role
             linkFactories:
                 detail:
                    destination: ':Org:Org:detail'
                    params:
                        contestId: contest_id
                        id: org_id
                    title: Detail
                 edit:
                    destination: ':Org:Org:edit'
                    params:
                        contestId: contest_id
                        id: org_id
                    title: Edit
        payment:
             service: FKSDB\Models\ORM\Services\ServicePayment
             model: FKSDB\Models\ORM\Models\ModelPayment
             columnFactories:
                 payment:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Payment\PaymentColumnFactory
                    title: _('Payment')
                 payment_uid:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Payment\UIdColumnFactory
                    title: _('Payment UId')
                 bank_account:
                    type: string
                    title: _(Bank account)
                 bank_name:
                    type: string
                    title: _(Bank name)
                 constant_symbol:
                    type: string
                    title: Constant symbol
                 iban:
                    type: string
                    title: _(IBAN)
                 specific_symbol:
                    type: string
                    title: _(Specific symbol)
                 swift:
                    type: string
                    title: _(SWIFT)
                 variable_symbol:
                    type: string
                    title: Variable symbol
                 recipient:
                    type: string
                    title: _(Recipient)
                 price:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Payment\PriceColumnFactory
                    title: _('Price')
                 #currency:
                 state:
                     type: state
                     title: _(State)
                     states:
                         waiting: [badge: 'badge bg-warning', label: 'Waiting for paying']
                         canceled: [badge: 'badge bg-secondary', label: 'Payment canceled']
                         received: [badge: 'badge bg-success', label: 'Payment received']
                         new: [badge: 'badge bg-primary', label: 'New payment']
             linkFactories:
                 detail:
                      destination: ':Event:Payment:detail'
                      params:
                          eventId: event_id
                          id: payment_id
                      title: Detail
        person:
             service: FKSDB\Models\ORM\Services\ServicePerson
             model: FKSDB\Models\ORM\Models\ModelPerson
             columnFactories:
                person_link:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Person\PersonLinkColumnFactory
                    title: _('Person')
                full_name:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Person\FullNameColumnFactory
                    title: _('Person')
                person_id:
                    type: primaryKey
                    title: _(Person Id)
                    permission: BASIC
                gender:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Person\GenderColumnFactory
                    permission: FULL
                    title: _('Gender')
                created:
                    type: dateTime
                    title: _(Created)
                born_family_name:
                    type: string
                    title: _(Born family name)
                    description: _('Only if different from surname.')
                    permission: FULL
                display_name:
                    type: string
                    title: _(Display name)
                    description: _('Only if different from "Name Surname".')
                    permission: BASIC
                family_name:
                    type: string
                    title: _(Family name)
                    permission: BASIC
                other_name:
                    type: string
                    title: _(Other name)
                    permission: BASIC
        person_has_flag:
            service: FKSDB\Models\ORM\Services\ServicePersonHasFlag
            model: FKSDB\Models\ORM\Models\ModelPersonHasFlag
        person_history:
             service: FKSDB\Models\ORM\Services\ServicePersonHistory
             model: FKSDB\Models\ORM\Models\ModelPersonHistory
             columnFactories:
                school_id:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\PersonHistory\SchoolIdColumnFactory
                    title: _(School)
                ac_year:
                    type: string
                    title: _('Academic year')
                    omitInputField: true
                study_year:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\PersonHistory\StudyYearColumnFactory
                    description: _('For determinig the category.')
                    title: _('Study year')
                class:
                    type: string
                    title: _('Class')
                    permissions: RESTRICT
        person_info:
             service: FKSDB\Models\ORM\Services\ServicePersonInfo
             model: FKSDB\Models\ORM\Models\ModelPersonInfo
             columnFactories:
                email:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\PersonInfo\EmailColumnFactory
                    permision: RESTRICT
                    title:  _('E-mail')
                health_insurance:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\PersonInfo\HealthInsuranceColumnFactory
                    permisson: FULL
                    title: _('Health insurance')
                citizenship:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\PersonInfo\CitizenshipColumnFactory
                    permission: FULL
                    title: _('Nationality')
                account:
                    type: string
                    title: _('Bank account')
                    permission:
                        read: FULL
                        write: FULL
                homepage:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\PersonInfo\HomepageColumnFactory
                    title: _('Homepage')
                phone:
                    type: phone
                    title: _('Phone')
                phone_parent_m:
                    type: phone
                    title: _('Phone number (mother)')
                    permission:
                       read: RESTRICT
                       write: RESTRICT
                phone_parent_d:
                    type: phone
                    title: _('Phone number (father)')
                    permission:
                        read: RESTRICT
                        write: RESTRICT
                email_parent_m:
                    type: email
                    title: _('E-mail (mother)')
                    permission: RESTRICT
                email_parent_d:
                    type: email
                    title: _('E-mail (father)')
                    permission: RESTRICT
                id_number:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\PersonInfo\IdNumberColumnFactory
                    description: _('Number of the ID which you will carry with you during the event')
                    title: _('Passport no.')
                    permission: FULL
                born:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\PersonInfo\BornColumnFactory
                    permission: FULL
                    title: _('Date of birth')
                born_id:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\PersonInfo\BornIdColumnFactory
                    title: _('Birth Id')
                    description: _('For foreigners empty.')
                    permission: FULL
                birthplace:
                    type: string
                    title: _('Place of birth')
                    description: _('City and region (for diplomas).')
                    permission:
                        read: FULL
                        write: FULL
                career:
                    title: _(Current role)
                    type: text
                    description: _(Shown in the organizers' list)
                im:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\PersonInfo\ImColumnFactory
                    permission: RESTRICT
                    title: _('ICQ, Jabber, etc.')
                agreed:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\PersonInfo\AgreedColumnFactory
                    title: _('I agree with the privacy policy')
                uk_login:
                    type: string
                    title: Login UK
                    permission: RESTRICT
                linkedin_id:
                    type: string
                    title: Linkedin Id
                    permission: BASIC
                employer:
                    type: string
                    title: Zaměstnavatel
                    permission: FULL
                origin:
                    type: string
                    title: 'How did you came to know about us?'
                    permission: BASIC
                note:
                    type: string
                    title: Poznámka
                    permission: BASIC
                academic_degree_prefix:
                    type: string
                    title: Titul před jménem
                    permission: RESTRICT
                academic_degree_suffix:
                    type: string
                    title: Titul za jménem
                    permission: RESTRICT
                pizza:
                    type: string
                    title: Pizza
                    permission: RESTRICT
        post_contact:
            service: FKSDB\Models\ORM\Services\ServicePostContact
            model: FKSDB\Models\ORM\Models\ModelPostContact
        quiz:
            service: FKSDB\Models\ORM\Services\ServiceQuiz
            model: FKSDB\Models\ORM\Models\ModelQuiz
        region:
            service: FKSDB\Models\ORM\Services\ServiceRegion
            model: FKSDB\Models\ORM\Models\ModelRegion
        role:
           service: FKSDB\Models\ORM\Services\ServiceRole
           model: FKSDB\Models\ORM\Models\ModelRole
        school:
              service: FKSDB\Models\ORM\Services\ServiceSchool
              model: FKSDB\Models\ORM\Models\ModelSchool
              columnFactories:
                  school:
                      type: string
                      title: _(School)
                      accessKey: name_abbrev
              linkFactories:
                  edit:
                      destination: :Org:School:edit
                      params:
                          id: school_id
                      title: Edit
                  detail:
                      destination: :Org:School:detail
                      params:
                          id: school_id
                      title: Detail
        study_year:
            service: FKSDB\Models\ORM\Services\ServiceStudyYear
            model: FKSDB\Models\ORM\Models\ModelStudyYear
        submit:
            service: FKSDB\Models\ORM\Services\ServiceSubmit
            model: FKSDB\Models\ORM\Models\ModelSubmit
        submit_quiz:
            service: FKSDB\Models\ORM\Services\ServiceSubmitQuiz
            model: FKSDB\Models\ORM\Models\ModelSubmitQuiz
        task:
             service: FKSDB\Models\ORM\Services\ServiceTask
             model: FKSDB\Models\ORM\Models\ModelTask
             columnFactories:
                 fq_name:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Task\FQNameColumnFactory
                    title: _('Task')
                 series:
                    type: string
                    title: _(Series)
                 label:
                     type: string
                     title: _(Label)
                 name_cs:
                     type: string
                     title: _(Name cs)
                 task_id:
                     type: primaryKey
                     title: _(Task Id)
                 points:
                     type: string
                     title: _(Points)
                 year:
                     type: string
                     title: _(Year)
        task_contribution:
             service: FKSDB\Models\ORM\Services\ServiceTaskContribution
             model: FKSDB\Models\ORM\Models\ModelTaskContribution
             columnFactories:
                 type:
                    type: string
                    title: _(Type)
        task_study_year:
            service: FKSDB\Models\ORM\Services\ServiceTaskStudyYear
            model: FKSDB\Models\ORM\Models\ModelTaskStudyYear
        teacher:
             service: FKSDB\Models\ORM\Services\ServiceTeacher
             model: FKSDB\Models\ORM\Models\ModelTeacher
             columnFactories:
                 state:
                    type: state
                    states:
                        proposal: [badge: 'badge bg-info', label: 'Proposal']
                        cooperate: [badge: 'badge bg-success', label: 'Cooperate']
                        ended: [badge: 'badge bg-dark',  label: 'Ended']
                        undefined: [badge: 'badge bg-secondary',  label: 'Undefined']
                    title: _('Cooperation status')
                 since:
                    type: date
                    title: _('Teaches since')
                 until:
                    type: date
                    title: _('Teaches until')
                 number_brochures:
                    type: int
                    title: _(Number of brochures)
                    description: _('Number of brochures/propagation items, that he wants to send.')
                 note:
                    type: text
                    title: _(Note)
             linkFactories:
                 edit:
                     destination: :Org:Teacher:edit
                     params:
                         id: teacher_id
                     title: Edit
                 detail:
                     destination: :Org:Teacher:detail
                     params:
                         id: teacher_id
                     title: Detail
#fyziklani
        fyziklani_room:
            service: FKSDB\Models\ORM\Services\Fyziklani\ServiceFyziklaniRoom
            model: FKSDB\Models\ORM\Models\Fyziklani\ModelFyziklaniRoom
        fyziklani_team_position:
            service: FKSDB\Models\ORM\Services\Fyziklani\ServiceFyziklaniTeamPosition
            model: FKSDB\Models\ORM\Models\Fyziklani\ModelFyziklaniTeamPosition

        fyziklani_submit:
             service: FKSDB\Models\ORM\Services\Fyziklani\ServiceFyziklaniSubmit
             model: FKSDB\Models\ORM\Models\Fyziklani\ModelFyziklaniSubmit
             columnFactories:
                fyziklani_submit_id:
                    type: primaryKey
                    title: _(Submit Id)
                state:
                    type: state
                    title: _(State)
                    states:
                        not_checked: [badge: 'badge bg-danger', label: 'not checked']
                        checked: [badge: 'badge bg-success', label: 'checked']
                created:
                    type: dateTime
                    title: _(Created)
                    format: 'H:m:s d-M-Y'
                modified:
                    type: dateTime
                    title: _(Modified)
                    format: 'H:m:s d-M-Y'
                points:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Fyziklani\FyziklaniSubmit\PointsColumnFactory
                    title: _('Points')
        fyziklani_task:
             service: FKSDB\Models\ORM\Services\Fyziklani\ServiceFyziklaniTask
             model: FKSDB\Models\ORM\Models\Fyziklani\ModelFyziklaniTask
             columnFactories:
                fyziklani_task_id:
                    type: primaryKey
                    title: _(Task Id)
                name:
                    type: string
                    title: _(Name)
                label:
                    type: string
                    title: _(Label)
        fyziklani_game_setup:
             service: FKSDB\Models\ORM\Services\Fyziklani\ServiceFyziklaniGameSetup
             model: FKSDB\Models\ORM\Models\Fyziklani\ModelFyziklaniGameSetup
             columnFactories:
                tasks_on_board:
                    type: string
                    title: Tasks on board
                game_start:
                    type: dateTime
                    title: _(Game start)
                game_end:
                    type: dateTime
                    title: _(Game end)
                result_display:
                    type: dateTime
                    title: _(Results display)
                result_hide:
                    type: dateTime
                    title: _(Results hide)
                refresh_delay:
                    type: int
                    title: _(Refresh delay)
                    suffix: ms
                result_hard_display:
                    type: logic
                    title: _(Hard display)
                available_points:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Fyziklani\FyziklaniGameSetup\AvailablePointsColumnFactory
                    title: _('Available points')
        e_fyziklani_team:
             service: FKSDB\Models\ORM\Services\Fyziklani\ServiceFyziklaniTeam
             model: FKSDB\Models\ORM\Models\Fyziklani\ModelFyziklaniTeam
             columnFactories:
                e_fyziklani_team_id:
                  type: primaryKey
                  title: _(Team Id)
                status:
                  type: state
                  title: _(State)
                  states: %event_participant.states%
                phone:
                    type: phone
                    title: _(Phone)
                    writeOnly: false
                note:
                    type: text
                    title: _(Note)
                    omitInputField: true
                category:
                    type: string
                    title: _(Category)
                    omitInputField: true
                created:
                    type: dateTime
                    title: _(Created)
                rank_category:
                    type: string
                    title: _(Rank in category)
                    omitInputField: true
                rank_total:
                    type: string
                    title: _(Total rank)
                    omitInputField: true
                points:
                    type: string
                    title: _(Points)
                    omitInputField: true
                game_lang:
                    type: string
                    title: _('Game language')
                force_a:
                    type: logic
                    title: _(Force A)
                password:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Fyziklani\FyziklaniTeam\PasswordColumnFactory
                    title: _('Password')
                name:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Fyziklani\FyziklaniTeam\NameColumnFactory
                    title: _('Team name')
                name_n_id:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Fyziklani\FyziklaniTeam\NameNIdColumnFactory
                    title: _('Team')
                opened_submitting:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Fyziklani\FyziklaniTeam\OpenedSubmittingColumnFactory
                    title: _('Submit opened?')
             linkFactories:
                detail:
                    destination: ':Event:TeamApplication:detail'
                    params:
                       eventId: event_id
                       id: e_fyziklani_team_id
                    title: Detail

#schedule
        person_schedule:
            service: FKSDB\Models\ORM\Services\Schedule\ServicePersonSchedule
            model: FKSDB\Models\ORM\Models\Schedule\ModelPersonSchedule
        schedule_group:
             service: FKSDB\Models\ORM\Services\Schedule\ServiceScheduleGroup
             model: FKSDB\Models\ORM\Models\Schedule\ModelScheduleGroup
             columnFactories:
                 schedule_group_id:
                    type: primaryKey
                    title: _(Schedule group Id)
                 schedule_group_type:
                     type: state
                     title: _(Type)
                     states:
                         accommodation: [badge: 'badge bg-color-1', label: 'Accommodation']
                         accommodation_gender: [badge: 'badge bg-color-2', label: 'Accommodation gender']
                         accommodation_teacher: [badge: 'badge bg-color-3', label: 'Accommodation teacher']
                         teacher_present: [badge: 'badge bg-color-4', label: 'Schedule during competition']
                         weekend: [badge: 'badge bg-color-5', label: 'Weekend']
                         weekend_info: [badge: 'badge bg-color-6', label: 'Weekend info']
                         visa: [badge: 'badge bg-color-7', label: 'Visa']
                         dsef_morning: [badge: 'badge bg-color-8', label: 'DSEF morning']
                         dsef_afternoon: [badge: 'badge bg-color-9', label: 'DSEF afternoon']
                         vaccination_covid: [badge: 'badge bg-color-10', label: 'Covid-19 Vaccination']
                 start:
                    type: dateTime
                    title: _(Schedule start)
                 end:
                    type: dateTime
                    title: _(Schedule end)
                 name_cs:
                    type: string
                    title: _(Name cs)
                 name_en:
                    type: string
                    title: _(Name en)
                 name:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Schedule\ScheduleGroup\NameColumnFactory
                    title: _(Group name)
        schedule_item:
             service: FKSDB\Models\ORM\Services\Schedule\ServiceScheduleItem
             model: FKSDB\Models\ORM\Models\Schedule\ModelScheduleItem
             columnFactories:
                schedule_item_id:
                    type: primaryKey
                    title: _(Schedule item Id)
                require_id_number:
                    type: logic
                    title: _(Require Id number)
                price_czk:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Schedule\ScheduleItem\PriceCZKColumnFactory
                    title: _(Price CZK)
                price_eur:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Schedule\ScheduleItem\PriceEURColumnFactory
                    title: _(Price EUR)
                name_en:
                    type: string
                    title: _(Name en)
                name_cs:
                    type: string
                    title: _(Name cs)
                name:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Schedule\ScheduleItem\NameColumnFactory
                    title: _(Item name)
                    omitInputField: true
                description_en:
                    type: string
                    title: _(Description en)
                description_cs:
                    type: string
                    title: _(Description cs)
                capacity:
                    type: int
                    title: _(Total capacity)
                    nullValueFormat: infinite
                free_capacity:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Schedule\ScheduleItem\FreeCapacityColumnFactory
                    title: _(Free capacity)
                used_capacity:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\Schedule\ScheduleItem\UsedCapacityColumnFactory
                    title: _(Used capacity)
        schedule_payment:
            service: FKSDB\Models\ORM\Services\Schedule\ServiceSchedulePayment
            model: FKSDB\Models\ORM\Models\Schedule\ModelSchedulePayment
#stored query
        stored_query:
            service: FKSDB\Models\ORM\Services\StoredQuery\ServiceStoredQuery
            model: FKSDB\Models\ORM\Models\StoredQuery\ModelStoredQuery
            columnFactories:
                qid:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\StoredQuery\StoredQuery\QIDColumnFactory
                    title: _('QID')
                tags:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\StoredQuery\StoredQuery\TagsColumnFactory
                    title: _('Tags')
                sql:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\StoredQuery\StoredQuery\SQLColumnFactory
                    title: _('SQL')
                name:
                    type: class
                    class: FKSDB\Models\ORM\Columns\Tables\StoredQuery\StoredQuery\NameColumnFactory
                    title: _('Query name')
                query_id:
                    type: primaryKey
                    title: _(Query Id)
                description:
                    type: text
                    title: _(Description)
                php_post_proc:
                    type: string
                    title: _(PHP post processing)
                    description: _('Název třídy pro zpracování výsledku v PHP. Lze upravit jen v databázi.')

        stored_query_parameter:
             service: FKSDB\Models\ORM\Services\StoredQuery\ServiceStoredQueryParameter
             model: FKSDB\Models\ORM\Models\StoredQuery\ModelStoredQueryParameter
        stored_query_tag:
             service: FKSDB\Models\ORM\Services\StoredQuery\ServiceStoredQueryTag
             model: FKSDB\Models\ORM\Models\StoredQuery\ModelStoredQueryTag
        stored_query_tag_type:
             service: FKSDB\Models\ORM\Services\StoredQuery\ServiceStoredQueryTagType
             model: FKSDB\Models\ORM\Models\StoredQuery\ModelStoredQueryTagType
#wareHouse
        warehouse_product:
             service: FKSDB\Models\ORM\Services\Warehouse\ServiceProduct
             model: FKSDB\Models\ORM\Models\Warehouse\ModelProduct
             columnFactories:
                 product_id:
                     type: primaryKey
                     title: _(Product Id)
                 name_cs:
                     type: string
                     title: _(Name cs)
                 name_en:
                     type: string
                     title: _(Name en)
                 description_cs:
                     type: string
                     title: _(Description cs)
                 description_en:
                     type: string
                     title: _(Description en)
                 note:
                     type: text
                     title: _(Note)
                 category:
                     type: state
                     title: _(Category)
                     states:
                         game: {badge: 'badge bg-color-1', label: 'Game'}
                         game-extension: {badge: 'badge bg-color-1', label: 'Game extension'}
                         apparel: {badge: 'badge bg-color-2', label: 'Apparel'}
                         book: {badge: 'badge bg-color-3', label: 'Book'}
                         other: {badge: 'badge bg-color-4', label: 'Book'}

        warehouse_producer:
             service: FKSDB\Models\ORM\Services\Warehouse\ServiceProducer
             model: FKSDB\Models\ORM\Models\Warehouse\ModelProducer
             referencedAccess:
                 model: FKSDB\Models\ORM\Models\Warehouse\IProducerReferencedModel
                 method: getProducer
             columnFactories:
                 producer_id:
                     type: primaryKey
                     title: _(Product Id)
                 name:
                     type: string
                     title: _(Producer)
        warehouse_item:
            service: FKSDB\Models\ORM\Services\Warehouse\ServiceItem
            model: FKSDB\Models\ORM\Models\Warehouse\ModelItem
        e_fyziklani_participant:
            service: FKSDB\Models\ORM\Services\Events\ServiceFyziklaniParticipant
            model: FKSDB\Models\ORM\Models\Events\ModelFyziklaniParticipant

        e_dsef_participant:
            service: FKSDB\Models\ORM\Services\Events\ServiceDsefParticipant
            model: FKSDB\Models\ORM\Models\Events\ModelDsefParticipant
        e_dsef_group:
            service: FKSDB\Models\ORM\Services\Events\ServiceDsefGroup
            model: FKSDB\Models\ORM\Models\Events\ModelDsefGroup
        unsubscribed_email:
            model: Fykosak\NetteORM\DummyModel
            service: FKSDB\Models\ORM\Services\ServiceUnsubscribedEmail

services:
    event.ServiceMDsefParticipant:          FKSDB\Models\ORM\ServicesMulti\Events\ServiceMDsefParticipant

    event.ServiceMFyziklaniParticipant:     FKSDB\Models\ORM\ServicesMulti\Events\ServiceMFyziklaniParticipant
