parameters:
    event_participant:
        states:
            applied: [badge : 'badge badge-1', label : 'Applied']
            applied.nodsef: [badge : 'badge badge-1', label : 'applied.nodsef']
            applied.notsaf: [badge : 'badge badge-1', label : 'applied.notsaf']
            applied.tsaf: [badge : 'badge badge-1', label : 'applied.tsaf']
            approved: [badge : 'badge badge-1', label : 'Approved']
            interested: [badge : 'badge badge-2', label : 'Interested']
            pending: [badge : 'badge badge-2', label : 'Pending']
            participated: [badge : 'badge badge-3', label : 'Participated']
            missed: [badge : 'badge badge-4', label : 'Missed']
            disqualified : [badge : 'badge badge-5', label : 'Disqualified']
            rejected : [badge : 'badge badge-6', label : 'Rejected']
            cancelled : [badge : 'badge badge-6', label : 'Cancelled']
            paid : [badge : 'badge badge-7', label : 'Paid']
            out_of_db: [badge : 'badge badge-8', label : 'Out of FKSDB']
            spare: [badge : 'badge badge-9', label : 'Spare']
            spare1: [badge : 'badge badge-9', label : 'spare1']
            spare2: [badge : 'badge badge-9', label : 'spare2']
            spare3: [badge : 'badge badge-9', label : 'spare3']
            spare.tsaf: [badge : 'badge badge-9', label : 'spare.tsaf']
            auto.spare: [badge : 'badge badge-9', label : 'auto.spare']
            invited: [badge : 'badge badge-10', label : 'Invited']
            invited1: [badge : 'badge badge-10', label : 'invited1']
            invited2: [badge : 'badge badge-10', label : 'invited2']
            invited3: [badge : 'badge badge-10', label : 'invited3']
            auto.invited: [badge : 'badge badge-10', label : 'auto.invited']


DBReflection:
    tables:
         event:
             modelClassName: FKSDB\ORM\Models\ModelEvent
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\IEventReferencedModel
                method: getEvent
             columnFactories:
                event:
                    type: string
                    title: _(Event)
                    accessKey: name
                role: FKSDB\DBReflection\ColumnFactories\Event\EventRole
                event_id:
                    type: primaryKey
                    title: _('Event Id')
                parameters:
                    type: text
                    title: _(Parameters)
                    description: _('V Neon syntaxi, schéma je specifické pro definici akce.')
                name:
                    type: string
                    title: _(Name)
                    description: _('U soustředka místo.')
                    required: true
                begin:
                    type: dateTime
                    title: _(Event begin)
                    required: true
                end:
                    type: dateTime
                    title: _(Event end)
                    required: false
                    description: _('U jednodenních akcí shodný se začátkem.')
                registration_begin:
                    type: dateTime
                    title:  _(Registration begin)
                registration_end:
                    type: dateTime
                    title: _(Registration end)
                report:
                    type: text
                    description: _(Shrnující text k akci.)
                    title: _(Report)
                event_year:
                    type: int
                    title: _(Event year)
                    required: true
                    description: _('Ročník akce musí být unikátní pro daný typ akce.')
                year:
                    type: int
                    title: _(Contest year)
                    omitInputField: true
                event_type: FKSDB\DBReflection\ColumnFactories\Event\EventTypeRow
                event_type_id: FKSDB\DBReflection\ColumnFactories\Event\EventTypeRow
                event_link: FKSDB\DBReflection\ColumnFactories\Event\EventLink
             linkFactories:
                 application.list: FKSDB\DBReflection\LinkFactories\ParticipantListLink
         payment:
             modelClassName: FKSDB\ORM\Models\ModelPayment
             referencedAccess:
                  modelClassName: FKSDB\ORM\Models\IPaymentReferencedModel
                  method: getPayment
             columnFactories:
                 payment: FKSDB\DBReflection\ColumnFactories\Payment\PaymentColumnFactory
                 payment_uid: FKSDB\DBReflection\ColumnFactories\Payment\UIdRow
                 bank_account:
                    type: string
                    title: _(Bank account)
                 bank_name:
                    type: string
                    title: _(Bank name)
                 constant_symbol:
                    type: string
                    title: Constant symbol
                 iban:
                    type: string
                    title: _(IBAN)
                 specific_symbol:
                    type: string
                    title: _(Specific symbol)
                 swift:
                    type: string
                    title: _(SWIFT)
                 variable_symbol:
                    type: string
                    title: Variable symbol
                 recipient:
                    type: string
                    title: _(Recipient)
                 price: FKSDB\DBReflection\ColumnFactories\Payment\PriceRow
                 #currency:
                 state:
                     type: state
                     title: _(State)
                     states:
                         waiting: [badge: 'badge badge-warning', label: 'Waiting for paying']
                         canceled: [badge: 'badge badge-secondary', label: 'Payment canceled']
                         received: [badge: 'badge badge-success', label: 'Payment received']
                         new: [badge: 'badge badge-primary', label: 'New payment']
             linkFactories:
                 detail:
                      destination: ':Event:Payment:detail'
                      params:
                          eventId: event_id
                          id: payment_id
                      title: Detail
         org:
             modelClassName: FKSDB\ORM\Models\ModelOrg
             columnFactories:
                org_id:
                    type: primaryKey
                    title: _(Org Id)
                since: FKSDB\DBReflection\ColumnFactories\Org\SinceRow
                until: FKSDB\DBReflection\ColumnFactories\Org\UntilRow
                order: FKSDB\DBReflection\ColumnFactories\Org\OrderRow
                tex_signature: FKSDB\DBReflection\ColumnFactories\Org\TexSignatureRow
                domain_alias: FKSDB\DBReflection\ColumnFactories\Org\DomainAliasRow
                contribution:
                    type: string
                    title: _(Contribution)
                    description: _('Zobrazeno v síni slávy')
                role:
                    type: string
                    title: Role
             linkFactories:
                 detail:
                    destination: ':Org:Org:detail'
                    params:
                        contestId: contest_id
                        id: org_id
                    title: Detail
                 edit:
                    destination: ':Org:Org:edit'
                    params:
                        contestId: contest_id
                        id: org_id
                    title: Edit
         person:
             modelClassName: FKSDB\ORM\Models\ModelPerson
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\IPersonReferencedModel
                method: getPerson
             columnFactories:
                person_link: FKSDB\DBReflection\ColumnFactories\Person\PersonLinkRow
                full_name: FKSDB\DBReflection\ColumnFactories\Person\FullNameRow
                person_id:
                    type: primaryKey
                    title: _(Person Id)
                    permission: BASIC
                gender: FKSDB\DBReflection\ColumnFactories\Person\GenderRow
                created:
                    type: dateTime
                    title: _(Created)
                born_family_name:
                    type: string
                    title: _(Born family name)
                    description: _('Pouze pokud je odlišné od příjmení.')
                    permission: FULL
                display_name:
                    type: string
                    title: _(Display name)
                    description: _('Pouze pokud je odlišné od "jméno příjmení".')
                    permission: BASIC
                family_name:
                    type: string
                    title: _(Family name)
                    permission: BASIC
                other_name:
                    type: string
                    title: _(Other name)
                    permission: BASIC
         person_info:
             modelClassName: FKSDB\ORM\Models\ModelPersonInfo
             columnFactories:
                email: FKSDB\DBReflection\ColumnFactories\PersonInfo\EmailRow
                health_insurance: FKSDB\DBReflection\ColumnFactories\PersonInfo\HealthInsuranceRow
                citizenship: FKSDB\DBReflection\ColumnFactories\PersonInfo\CitizenshipRow
                account: FKSDB\DBReflection\ColumnFactories\PersonInfo\AccountRow
                homepage: FKSDB\DBReflection\ColumnFactories\PersonInfo\HomepageRow
                phone:
                    type: phone
                    title: _('Phone')
                phone_parent_m:
                    type: phone
                    title: _('Phone number (mother)')
                    permission:
                       read: RESTRICT
                       write: RESTRICT
                phone_parent_d:
                    type: phone
                    title: _('Phone number (father)')
                    permission:
                        read: RESTRICT
                        write: RESTRICT
                email_parent_m:
                    type: email
                    title: _('E-mail (matka)')
                    permission: RESTRICT
                email_parent_d:
                    type: email
                    title: _('E-mail (otec)')
                    permission: RESTRICT
                id_number: FKSDB\DBReflection\ColumnFactories\PersonInfo\IdNumberRow
                born: FKSDB\DBReflection\ColumnFactories\PersonInfo\BornRow
                born_id: FKSDB\DBReflection\ColumnFactories\PersonInfo\BornIdRow
                birthplace: FKSDB\DBReflection\ColumnFactories\PersonInfo\BirthplaceRow
                career:
                    title: _(Co právě dělá)
                    type: text
                    description: _(Zobrazeno v seznamu organizátorů)
                im: FKSDB\DBReflection\ColumnFactories\PersonInfo\ImRow
                agreed: FKSDB\DBReflection\ColumnFactories\PersonInfo\AgreedRow
                uk_login:
                    type: string
                    title: Login UK
                    permission: RESTRICT
                linkedin_id:
                    type: string
                    title: Linkedin Id
                    permission: BASIC
                employer:
                    type: string
                    title: Zaměstnavatel
                    permission: FULL
                origin:
                    type: string
                    title: 'Jak jsi se o nás dozvěděl(a)?'
                    permission: BASIC
                note:
                    type: string
                    title: Poznámka
                    permission: BASIC
                academic_degree_prefix:
                    type: string
                    title: Titul před jménem
                    permission: RESTRICT
                academic_degree_suffix:
                    type: string
                    title: Titul za jménem
                    permission: RESTRICT
                pizza:
                    type: string
                    title: Pizza
                    permission: RESTRICT

         person_history:
             modelClassName: FKSDB\ORM\Models\ModelPersonHistory
             columnFactories:
                school_id: FKSDB\DBReflection\ColumnFactories\PersonHistory\SchoolIdRow
                ac_year: FKSDB\DBReflection\ColumnFactories\PersonHistory\AcYearRow
                study_year: FKSDB\DBReflection\ColumnFactories\PersonHistory\StudyYearRow
                class:
                    type: string
                    title: 'Class'
                    permissions: RESTRICT
         login:
             modelClassName: FKSDB\ORM\Models\ModelLogin
             columnFactories:
                login_id:
                    type: primaryKey
                    title: _(login Id)
                hash: FKSDB\DBReflection\ColumnFactories\Login\HashRow
                last_login:
                    type: dateTime
                    title: _(Last logged)
                login:
                    type: string
                    title: _(Login)
                    permission: RESTRICT
         event_participant:
             modelClassName: FKSDB\ORM\Models\ModelEventParticipant
             columnFactories:
                team: FKSDB\DBReflection\ColumnFactories\EventParticipant\TeamRow
                status:
                    type: state
                    title: _(State)
                    states: %event_participant.states%
                created:
                    type: dateTime
                    title: _(Created event)
                swimmer:
                    type: logic
                    title: _(Swimmer)
                price: FKSDB\DBReflection\ColumnFactories\EventParticipant\PriceRow
                diet:
                    type: text
                    title: _(Diet)
                health_restrictions:
                    type: text
                    title:  _(Health restrictions)
                used_drugs:
                    type: text
                    title: _(Used drugs)
                note:
                    type: text
                    title: _(Note)
                tshirt_color: FKSDB\DBReflection\ColumnFactories\EventParticipant\TShirtColorRow
                tshirt_size: FKSDB\DBReflection\ColumnFactories\EventParticipant\TShirtSizeRow
                arrival_ticket:
                    type: logic
                    title: _(Arrival ticket)
                arrival_time:
                    type: time
                    title:  _(Arrival time)
                    format: %H:%I
                arrival_destination: FKSDB\DBReflection\ColumnFactories\EventParticipant\ArrivalDestinationRow
                departure_time:
                    type: time
                    title: _(Departure time)
                    format: %H:%I
                departure_destination: FKSDB\DBReflection\ColumnFactories\EventParticipant\DepartureDestinationRow
                departure_ticket:
                    type: logic
                    title: _(Departure ticket)
                event_participant_id:
                    type: primaryKey
                    title:  _(Event participant Id)
                lunch_count:
                    type: int
                    title: _('Počet baget k obědu')
             linkFactories:
                   detail: FKSDB\DBReflection\LinkFactories\ParticipantDetailLink
                   edit: FKSDB\DBReflection\LinkFactories\ApplicationEditLink
         contestant_base:
             modelClassName: FKSDB\ORM\Models\ModelContestant
             columnFactories:
                ct_id:
                    type: primaryKey
                    title: _(Contestant Id)
                year:
                    type: string
                    title: _(Year)
             linkFactories:
                 edit:
                    destination: ':Org:Contestant:edit'
                    params:
                        contestId: contest_id
                        id: ct_id
                    title: Edit
         event_org:
             modelClassName: FKSDB\ORM\Models\ModelEventOrg
             columnFactories:
                event_org_id:
                    accessKey: e_org_id
                    type: primaryKey
                    title:  _(Event org Id)
                note:
                    type: string
                    title: _(Note)
             linkFactories:
                 edit:
                    destination: ':Event:Eventorg:edit'
                    params:
                        eventId: event_id
                        id: e_org_id
                    title: Edit
                 detail:
                     destination: ':Event:Eventorg:detail'
                     params:
                         eventId: event_id
                         id: e_org_id
                     title: Detail
         email_message:
             modelClassName: FKSDB\ORM\Models\ModelEmailMessage
             columnFactories:
                email_message_id:
                    type: primaryKey
                    title: _(Message Id)
                recipient:
                    sender:
                    type: email
                    title: _(Recipient)
                sender:
                    type: email
                    title: _(Sender)
                reply_to:
                    type: email
                    title: _(Reply to)
                subject:
                    type: string
                    title: _(Subject)
                carbon_copy:
                    type: email
                    title: _(Cc)
                blind_carbon_copy:
                    type: email
                    title: _(Bcc)
                text:
                    type: string
                    title: _(Text)
                state:
                    type: state
                    title: _(State)
                    states:
                        saved: [badge :'badge badge-1', label: Saved]
                        waiting: [badge :'badge badge-2', label: Waiting]
                        sent: [badge :'badge badge-3', label: Sent]
                        failed: [badge :'badge badge-4', label: Failed]
                        canceled: [badge :'badge badge-6', label: Canceled]
             #created:
             #send:
         fyziklani_submit:
             modelClassName: FKSDB\ORM\Models\Fyziklani\ModelFyziklaniSubmit
             columnFactories:
                fyziklani_submit_id:
                    type: primaryKey
                    title: _(Submit Id)
                state:
                    type: state
                    title: _(State)
                    states:
                        not_checked: [badge: 'badge badge-danger', label: 'not checked']
                        checked: [badge: 'badge badge-success', label: 'checked']
                created:
                    type: dateTime
                    title: _(Created)
                    format: 'H:m:s d-M-Y'
                modified:
                    type: dateTime
                    title: _(Modified)
                    format: 'H:m:s d-M-Y'
                points: FKSDB\DBReflection\ColumnFactories\Fyziklani\FyziklaniSubmit\PointsRow
         fyziklani_task:
             modelClassName: FKSDB\ORM\Models\Fyziklani\ModelFyziklaniTask
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\IFyziklaniTaskReferencedModel
                method: getFyziklaniTask
             columnFactories:
                fyziklani_task_id:
                    type: primaryKey
                    title: _(Task Id)
                name:
                    type: string
                    title: _(Name)
                label:
                    type: string
                    title: _(Label)
         fyziklani_game_setup:
             modelClassName: FKSDB\ORM\Models\Fyziklani\ModelFyziklaniGameSetup
             columnFactories:
                tasks_on_board:
                    type: string
                    title: Tasks on board
                game_start:
                    type: dateTime
                    title: _(Game start)
                game_end:
                    type: dateTime
                    title: _(Game end)
                result_display:
                    type: dateTime
                    title: _(Results display)
                result_hide:
                    type: dateTime
                    title: _(Results hide)
                refresh_delay:
                    type: int
                    title: _(Refresh delay)
                    suffix: ms
                result_hard_display:
                    type: logic
                    title: _(Hard display)
                available_points: FKSDB\DBReflection\ColumnFactories\Fyziklani\FyziklaniGameSetup\AvailablePointsRow
         e_fyziklani_team:
             modelClassName: FKSDB\ORM\Models\Fyziklani\ModelFyziklaniTeam
             referencedAccess:
                 modelClassName: FKSDB\ORM\Models\IFyziklaniTeamReferencedModel
                 method: getFyziklaniTeam
             columnFactories:
                e_fyziklani_team_id:
                  type: primaryKey
                  title: _(Team Id)
                status:
                  type: state
                  title: _(State)
                  states: %event_participant.states%
                phone:
                    type: phone
                    title: _(Phone)
                    writeOnly: false
                note:
                    type: text
                    title: _(Note)
                    omitInputField: true
                category:
                    type: string
                    title: _(Category)
                    omitInputField: true
                created:
                    type: dateTime
                    title: _(Created)
                rank_category:
                    type: string
                    title: _(Rank in category)
                    omitInputField: true
                rank_total:
                    type: string
                    title: _(Total rank)
                    omitInputField: true
                points:
                    type: string
                    title: _(Points)
                    omitInputField: true
                game_lang: FKSDB\DBReflection\ColumnFactories\Fyziklani\FyziklaniTeam\GameLangRow
                force_a:
                    type: logic
                    title: _(Force A)
                password: FKSDB\DBReflection\ColumnFactories\Fyziklani\FyziklaniTeam\PasswordRow
                name: FKSDB\DBReflection\ColumnFactories\Fyziklani\FyziklaniTeam\NameRow
                name_n_id: FKSDB\DBReflection\ColumnFactories\Fyziklani\FyziklaniTeam\NameNIdRow
                opened_submitting: FKSDB\DBReflection\ColumnFactories\Fyziklani\FyziklaniTeam\OpenedSubmittingRow
             linkFactories:
                detail:
                    destination: ':Event:TeamApplication:detail'
                    params:
                       eventId: event_id
                       id: e_fyziklani_team_id
                    title: Detail
         stored_query:
             modelClassName: FKSDB\ORM\Models\StoredQuery\ModelStoredQuery
             columnFactories:
                qid: FKSDB\DBReflection\ColumnFactories\StoredQuery\StoredQuery\QIDRow
                tags: FKSDB\DBReflection\ColumnFactories\StoredQuery\StoredQuery\TagsRow
         schedule_group:
             modelClassName: FKSDB\ORM\Models\Schedule\ModelScheduleGroup
             columnFactories:
                schedule_group_type: FKSDB\DBReflection\ColumnFactories\Schedule\ScheduleGroup\ScheduleGroupTypeRow
                start:
                    type: dateTime
                    title: _(Schedule start)
                end:
                    type: dateTime
                    title: _(Schedule end)
                name_cs:
                    type: string
                    title: _(Name cs)
                name_en:
                    type: string
                    title: _(Name en)
         schedule_item:
             modelClassName: FKSDB\ORM\Models\Schedule\ModelScheduleItem
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\IScheduleItemReferencedModel
                method: getScheduleItem
             columnFactories:
                require_id_number:
                    type: logic
                    title: _(Require Id number)
                price_czk: FKSDB\DBReflection\ColumnFactories\Schedule\ScheduleItem\PriceCZKRow
                price_eur: FKSDB\DBReflection\ColumnFactories\Schedule\ScheduleItem\PriceEURRow
                name_en:
                    type: string
                    title: _(Name en)
                name_cs:
                    type: string
                    title: _(Name cs)
                description_en:
                    type: string
                    title: _(Description en)
                description_cs:
                    type: string
                    title: _(Description cs)
                capacity:
                    type: int
                    title: _(Total capacity)
                    nullValueFormat: infinite
                free_capacity: FKSDB\DBReflection\ColumnFactories\Schedule\ScheduleItem\FreeCapacityRow
                used_capacity: FKSDB\DBReflection\ColumnFactories\Schedule\ScheduleItem\UsedCapacityRow
         teacher:
             modelClassName: FKSDB\ORM\Models\ModelTeacher
             columnFactories:
                state: FKSDB\DBReflection\ColumnFactories\Teacher\StateRow
                since: FKSDB\DBReflection\ColumnFactories\Teacher\SinceRow
                until: FKSDB\DBReflection\ColumnFactories\Teacher\UntilRow
                number_brochures:
                    type: int
                    title: _(Number of brochures)
                    description: _('Number of brochures/propagation items, that he wants to send.')
                note:
                    type: text
                    title: _(Note)
         task_contribution:
             modelClassName: FKSDB\ORM\Models\ModelTaskContribution
             columnFactories:
                 type:
                    type: string
                    title: _(Type)
         task:
             modelClassName: FKSDB\ORM\Models\ModelTask
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\ITaskReferencedModel
                method: getTask
             columnFactories:
                 fq_name: FKSDB\DBReflection\ColumnFactories\Task\FQNameRow
                 series:
                    type: string
                    title: _(Series)
                 label:
                     type: string
                     title: _(Label)
                 name_cs:
                     type: string
                     title: _(Name cs)
                 task_id:
                     type: primaryKey
                     title: _(Task Id)
                 points:
                     type: string
                     title: _(Points)
                 year:
                     type: string
                     title: _(Year)
         contest:
             modelClassName: FKSDB\ORM\Models\ModelContest
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\IContestReferencedModel
                method: getContest
             columnFactories:
                 contest: FKSDB\DBReflection\ColumnFactories\Contest\ContestColumnFactory
         school:
             modelClassName: FKSDB\ORM\Models\ModelSchool
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\ISchoolReferencedModel
                method: getSchool
             columnFactories:
                 school:
                     type: string
                     title: _(School)
                     accessKey: name_abbrev
    details:
        fyziklani.submit:
            -
                fields:
                   - fyziklani_submit.fyziklani_submit_id
                   - e_fyziklani_team.opened_submitting
                   - e_fyziklani_team.name
                   - e_fyziklani_team.e_fyziklani_team_id
            -
                headline: Task
                fields:
                   - fyziklani_task.fyziklani_task_id
                   - fyziklani_task.name
                   - fyziklani_task.label
            -
                fields:
                   - fyziklani_submit.points
                   - fyziklani_submit.state
            -
                fields:
                   - fyziklani_submit.created
                   - fyziklani_submit.modified
