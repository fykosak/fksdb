parameters:
    event_participant:
        states:
            applied: [badge : 'badge badge-1', label : 'Applied']
            applied.nodsef: [badge : 'badge badge-1', label : 'applied.nodsef']
            applied.notsaf: [badge : 'badge badge-1', label : 'applied.notsaf']
            applied.tsaf: [badge : 'badge badge-1', label : 'applied.tsaf']
            approved: [badge : 'badge badge-1', label : 'Approved']
            interested: [badge : 'badge badge-2', label : 'Interested']
            pending: [badge : 'badge badge-2', label : 'Pending']
            participated: [badge : 'badge badge-3', label : 'Participated']
            missed: [badge : 'badge badge-4', label : 'Missed']
            disqualified : [badge : 'badge badge-5', label : 'Disqualified']
            rejected : [badge : 'badge badge-6', label : 'Rejected']
            cancelled : [badge : 'badge badge-6', label : 'Cancelled']
            paid : [badge : 'badge badge-7', label : 'Paid']
            out_of_db: [badge : 'badge badge-8', label : 'Out of FKSDB']
            spare: [badge : 'badge badge-9', label : 'Spare']
            spare1: [badge : 'badge badge-9', label : 'spare1']
            spare2: [badge : 'badge badge-9', label : 'spare2']
            spare3: [badge : 'badge badge-9', label : 'spare3']
            spare.tsaf: [badge : 'badge badge-9', label : 'spare.tsaf']
            auto.spare: [badge : 'badge badge-9', label : 'auto.spare']
            invited: [badge : 'badge badge-10', label : 'Invited']
            invited1: [badge : 'badge badge-10', label : 'invited1']
            invited2: [badge : 'badge badge-10', label : 'invited2']
            invited3: [badge : 'badge badge-10', label : 'invited3']
            auto.invited: [badge : 'badge badge-10', label : 'auto.invited']


DBReflection:
    tables:
         event:
             modelClassName: FKSDB\ORM\Models\ModelEvent
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\IEventReferencedModel
                method: getEvent
             fields:
                event:
                    type: string
                    title: _(Event)
                    accessKey: name
                role: FKSDB\Components\DatabaseReflection\Event\EventRole
                event_id:
                    type: primaryKey
                    title: _('Event Id')
                parameters:
                    type: text
                    title: _(Parameters)
                    description: _('V Neon syntaxi, schéma je specifické pro definici akce.')
                name:
                    type: string
                    title: _(Name)
                    description: _('U soustředka místo.')
                    required: true
                begin:
                    type: dateTime
                    title: _(Event begin)
                    required: true
                end:
                    type: dateTime
                    title: _(Event end)
                    required: false
                    description: _('U jednodenních akcí shodný se začátkem.')
                registration_begin:
                    type: dateTime
                    title:  _(Registration begin)
                registration_end:
                    type: dateTime
                    title: _(Registration end)
                report:
                    type: text
                    description: _(Shrnující text k akci.)
                    title: _(Report)
                event_year:
                    type: int
                    title: _(Event year)
                    required: true
                    description: _('Ročník akce musí být unikátní pro daný typ akce.')
                year:
                    type: int
                    title: _(Contest year)
                    omitInputField: true
                event_type: FKSDB\Components\DatabaseReflection\Event\EventTypeRow
                event_type_id: FKSDB\Components\DatabaseReflection\Event\EventTypeRow
                event_link: FKSDB\Components\DatabaseReflection\ReferencedRows\EventLink
         payment:
             modelClassName: FKSDB\ORM\Models\ModelPayment
             referencedAccess:
                  modelClassName: FKSDB\ORM\Models\IPaymentReferencedModel
                  method: getPayment
             fields:
                 payment: FKSDB\Components\DatabaseReflection\ReferencedRows\PaymentRow
                 payment_uid: FKSDB\Components\DatabaseReflection\Payment\UIdRow
                 bank_account:
                    type: string
                    title: _(Bank account)
                 bank_name:
                    type: string
                    title: _(Bank name)
                 constant_symbol:
                    type: string
                    title: Constant symbol
                 iban:
                    type: string
                    title: _(IBAN)
                 specific_symbol:
                    type: string
                    title: _(Specific symbol)
                 swift:
                    type: string
                    title: _(SWIFT)
                 variable_symbol:
                    type: string
                    title: Variable symbol
                 recipient:
                    type: string
                    title: _(Recipient)
                 price: FKSDB\Components\DatabaseReflection\Payment\PriceRow
                 state:
                     type: state
                     title: _(State)
                     states:
                         waiting: [badge: 'badge badge-warning', label: 'Waiting for paying']
                         canceled: [badge: 'badge badge-secondary', label: 'Payment canceled']
                         received: [badge: 'badge badge-success', label: 'Payment received']
                         new: [badge: 'badge badge-primary', label: 'New payment']
         org:
             org_id:
                  type: primaryKey
                  title: _(Org Id)
             since: FKSDB\Components\DatabaseReflection\Org\SinceRow
             until: FKSDB\Components\DatabaseReflection\Org\UntilRow
             order: FKSDB\Components\DatabaseReflection\Org\OrderRow
             tex_signature: FKSDB\Components\DatabaseReflection\Org\TexSignatureRow
             domain_alias: FKSDB\Components\DatabaseReflection\Org\DomainAliasRow
             contribution:
                 type: string
                 title: _(Contribution)
                 description: _('Zobrazeno v síni slávy')
             role:
                 type: string
                 title: Role
         person:
             modelClassName: FKSDB\ORM\Models\ModelPerson
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\IPersonReferencedModel
                method: getPerson
             fields:
                person_link: FKSDB\Components\DatabaseReflection\ReferencedRows\PersonLinkRow
                full_name: FKSDB\Components\DatabaseReflection\Person\FullNameRow
                person_id:
                    type: primaryKey
                    title: _(Person Id)
                    permission: PERMISSION_ALLOW_BASIC
                gender: FKSDB\Components\DatabaseReflection\Person\GenderRow
                created:
                    type: dateTime
                    title: _(Created)
                born_family_name:
                    type: string
                    title: _(Born family name)
                    description: _('Pouze pokud je odlišné od příjmení.')
                    permission: PERMISSION_ALLOW_FULL
                display_name:
                    type: string
                    title: _(Display name)
                    description: _('Pouze pokud je odlišné od "jméno příjmení".')
                    permission: PERMISSION_ALLOW_BASIC
                family_name:
                    type: string
                    title: _(Family name)
                    permission: PERMISSION_ALLOW_BASIC
                other_name:
                    type: string
                    title: _(Other name)
                    permission: PERMISSION_ALLOW_BASIC
         person_info:
             email: FKSDB\Components\DatabaseReflection\PersonInfo\EmailRow
             health_insurance: FKSDB\Components\DatabaseReflection\PersonInfo\HealthInsuranceRow
             citizenship: FKSDB\Components\DatabaseReflection\PersonInfo\CitizenshipRow
             account: FKSDB\Components\DatabaseReflection\PersonInfo\AccountRow
             homepage: FKSDB\Components\DatabaseReflection\PersonInfo\HomepageRow
             phone:
                 type: phone
                 title: _('Phone')
             phone_parent_m:
                 type: phone
                 title: _('Telefonní číslo (matka)')
             phone_parent_d:
                 type: phone
                 title: _('Telefonní číslo (otec)')
             email_parent_m: FKSDB\Components\DatabaseReflection\PersonInfo\EmailParentMRow
             email_parent_d: FKSDB\Components\DatabaseReflection\PersonInfo\EmailParentDRow
             id_number: FKSDB\Components\DatabaseReflection\PersonInfo\IdNumberRow
             born: FKSDB\Components\DatabaseReflection\PersonInfo\BornRow
             born_id: FKSDB\Components\DatabaseReflection\PersonInfo\BornIdRow
             birthplace: FKSDB\Components\DatabaseReflection\PersonInfo\BirthplaceRow
             career:
                 title: _(Co právě dělá)
                 type: text
                 description: _(Zobrazeno v seznamu organizátorů)
             im: FKSDB\Components\DatabaseReflection\PersonInfo\ImRow
             agreed: FKSDB\Components\DatabaseReflection\PersonInfo\AgreedRow
             uk_login:
                 type: string
                 title: Login UK
                 permission: PERMISSION_ALLOW_RESTRICT
             linkedin_id:
                 type: string
                 title: Linkedin Id
                 permission: PERMISSION_ALLOW_BASIC
             employer:
                 type: string
                 title: Zaměstnavatel
                 permission: PERMISSION_ALLOW_FULL
             origin:
                 type: string
                 title: 'Jak jsi se o nás dozvěděl(a)?'
                 permission: PERMISSION_ALLOW_BASIC
             note:
                 type: string
                 title: Poznámka
                 permission: PERMISSION_ALLOW_BASIC
             academic_degree_prefix:
                  type: string
                  title: Titul před jménem
                  permission: PERMISSION_ALLOW_RESTRICT
             academic_degree_suffix:
                 type: string
                 title: Titul za jménem
                 permission: PERMISSION_ALLOW_RESTRICT
             pizza:
                 type: string
                 title: Pizza
                 permission: PERMISSION_ALLOW_RESTRICT

         person_history:
             ac_year: FKSDB\Components\DatabaseReflection\PersonHistory\AcYearRow
             study_year: FKSDB\Components\DatabaseReflection\PersonHistory\StudyYearRow
             class:
                 type: string
                 title: 'Class'
                 permissions: PERMISSION_ALLOW_RESTRICT
         login:
             login_id:
                 type: primaryKey
                 title: _(login Id)
             hash: FKSDB\Components\DatabaseReflection\Login\HashRow
             last_login:
                 type: dateTime
                 title: _(Last logged)
             login:
                 type: string
                 title: _(Login)
                 permission: PERMISSION_ALLOW_RESTRICT
         event_participant:
             team: FKSDB\Components\DatabaseReflection\EventParticipant\TeamRow
             status:
                 type: state
                 title: _(State)
                 states: %event_participant.states%
             created:
                 type: dateTime
                 title: _(Created event)
             swimmer: FKSDB\Components\DatabaseReflection\EventParticipant\SwimmerRow
             price: FKSDB\Components\DatabaseReflection\EventParticipant\PriceRow
             diet: FKSDB\Components\DatabaseReflection\EventParticipant\DietRow
             health_restrictions: FKSDB\Components\DatabaseReflection\EventParticipant\HealthRestrictionsRow
             used_drugs: FKSDB\Components\DatabaseReflection\EventParticipant\UsedDrugsRow
             note: FKSDB\Components\DatabaseReflection\EventParticipant\NoteRow
             tshirt_color: FKSDB\Components\DatabaseReflection\EventParticipant\TShirtColorRow
             tshirt_size: FKSDB\Components\DatabaseReflection\EventParticipant\TShirtSizeRow
             arrival_ticket: FKSDB\Components\DatabaseReflection\EventParticipant\ArrivalTicketRow
             arrival_time: FKSDB\Components\DatabaseReflection\EventParticipant\ArrivalTimeRow
             arrival_destination: FKSDB\Components\DatabaseReflection\EventParticipant\ArrivalDestinationRow
             departure_time: FKSDB\Components\DatabaseReflection\EventParticipant\DepartureTimeRow
             departure_destination: FKSDB\Components\DatabaseReflection\EventParticipant\DepartureDestinationRow
             departure_ticket: FKSDB\Components\DatabaseReflection\EventParticipant\DepartureTicketRow
             event_participant_id:
                 type: primaryKey
                 title:  _(Event participant Id)
         contestant_base:
             ct_id:
                 type: primaryKey
                 title: _(Contestant Id)
             year:
                 type: string
                 title: _(Year)
         event_org:
             event_org_id:
                 accessKey: e_org_id
                 type: primaryKey
                 title:  _(Event org Id)
             note:
                 type: string
                 title: _(Note)
         email_message:
             email_message_id:
                 type: primaryKey
                 title: _(Message Id)
             recipient:
                 sender:
                 type: email
                 title: _(Recipient)
             sender:
                 type: email
                 title: _(Sender)
             reply_to:
                 type: email
                 title: _(Reply to)
             subject:
                 type: string
                 title: _(Subject)
             carbon_copy:
                 type: email
                 title: _(Cc)
             blind_carbon_copy:
                 type: email
                 title: _(Bcc)
             text:
                 type: string
                 title: _(Text)
             state:
                 type: state
                 title: _(State)
                 states:
                      saved: [badge :'badge badge-1', label: Saved]
                      waiting: [badge :'badge badge-2', label: Waiting]
                      sent: [badge :'badge badge-3', label: Sent]
                      failed: [badge :'badge badge-4', label: Failed]
                      canceled: [badge :'badge badge-6', label: Canceled]
             #created:
             #send:
         fyziklani_submit:
             fyziklani_submit_id:
                 type: primaryKey
                 title: _(Submit Id)
             state:
                 type: state
                 title: _(State)
                 states:
                     not_checked: [badge: 'badge badge-danger', label: 'not checked']
                     checked: [badge: 'badge badge-success', label: 'checked']
             created:
                 type: dateTime
                 title: _(Created)
                 format: 'H:m:s d-M-Y'
             modified:
                 type: dateTime
                 title: _(Modified)
                 format: 'H:m:s d-M-Y'
             points: FKSDB\Components\DatabaseReflection\Fyziklani\FyziklaniSubmit\PointsRow
         fyziklani_task:
             modelClassName: FKSDB\ORM\Models\Fyziklani\ModelFyziklaniTask
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\IFyziklaniTaskReferencedModel
                method: getFyziklaniTask
             fields:
                fyziklani_task_id:
                    type: primaryKey
                    title: _(Task Id)
                name:
                    type: string
                    title: _(Name)
                label:
                    type: string
                    title: _(Label)
         fyziklani_game_setup:
             tasks_on_board:
                 type: string
                 title: Tasks on board
             game_start:
                 type: dateTime
                 title: _(Game start)
             game_end:
                 type: dateTime
                 title: _(Game end)
             result_display:
                 type: dateTime
                 title: _(Results display)
             result_hide:
                 type: dateTime
                 title: _(Results hide)
             refresh_delay:
                 type: int
                 title: _(Refresh delay)
                 suffix: ms
             result_hard_display: FKSDB\Components\DatabaseReflection\Fyziklani\FyziklaniGameSetup\ResultHardDisplayRow
             available_points: FKSDB\Components\DatabaseReflection\Fyziklani\FyziklaniGameSetup\AvailablePointsRow
         e_fyziklani_team:
             modelClassName: FKSDB\ORM\Models\Fyziklani\ModelFyziklaniTeam
             referencedAccess:
                 modelClassName: FKSDB\ORM\Models\IFyziklaniTeamReferencedModel
                 method: getFyziklaniTeam
             fields:
                e_fyziklani_team_id:
                  type: primaryKey
                  title: _(Team Id)
                status:
                  type: state
                  title: _(State)
                  states: %event_participant.states%
                phone:
                    type: phone
                    title: _(Phone)
                    writeOnly: false
                note:
                    type: text
                    title: _(Note)
                    omitInputField: true
                category:
                    type: string
                    title: _(Category)
                    omitInputField: true
                created:
                    type: dateTime
                    title: _(Created)
                rank_category:
                    type: string
                    title: _(Rank in category)
                    omitInputField: true
                rank_total:
                    type: string
                    title: _(Total rank)
                    omitInputField: true
                points:
                    type: string
                    title: _(Points)
                    omitInputField: true
                game_lang: FKSDB\Components\DatabaseReflection\Fyziklani\FyziklaniTeam\GameLangRow
                force_a: FKSDB\Components\DatabaseReflection\Fyziklani\FyziklaniTeam\ForceARow
                password: FKSDB\Components\DatabaseReflection\Fyziklani\FyziklaniTeam\PasswordRow
                name: FKSDB\Components\DatabaseReflection\Fyziklani\FyziklaniTeam\NameRow
                name_n_id: FKSDB\Components\DatabaseReflection\Fyziklani\FyziklaniTeam\NameNIdRow
                opened_submitting: FKSDB\Components\DatabaseReflection\Fyziklani\FyziklaniTeam\OpenedSubmittingRow
         stored_query:
             qid: FKSDB\Components\DatabaseReflection\StoredQuery\StoredQuery\QIDRow
             tags: FKSDB\Components\DatabaseReflection\StoredQuery\StoredQuery\TagsRow
         schedule_group:
             schedule_group_type: FKSDB\Components\DatabaseReflection\Tables\Schedule\ScheduleGroup\ScheduleGroupTypeRow
             start:
                 type: dateTime
                 title: _(Schedule start)
             end:
                 type: dateTime
                 title: _(Schedule end)
             name_cs:
                 type: string
                 title: _(Name cs)
             name_en:
                 type: string
                 title: _(Name en)
         schedule_item:
             require_id_number: FKSDB\Components\DatabaseReflection\Tables\Schedule\ScheduleItem\RequireIdNumberRow
             price_czk: FKSDB\Components\DatabaseReflection\Tables\Schedule\ScheduleItem\PriceCZKRow
             price_eur: FKSDB\Components\DatabaseReflection\Tables\Schedule\ScheduleItem\PriceEURRow
             name_en:
                 type: string
                 title: _(Name en)
             name_cs:
                 type: string
                 title: _(Name cs)
             description_en:
                 type: string
                 title: _(Description en)
             description_cs:
                 type: string
                 title: _(Description cs)
             capacity:
                 type: int
                 title: _(Total capacity)
                 nullValueFormat: infinite
             free_capacity: FKSDB\Components\DatabaseReflection\Tables\Schedule\ScheduleItem\FreeCapacityRow
             used_capacity: FKSDB\Components\DatabaseReflection\Tables\Schedule\ScheduleItem\UsedCapacityRow
         teacher:
             state: FKSDB\Components\DatabaseReflection\Tables\Teacher\StateRow
             since: FKSDB\Components\DatabaseReflection\Tables\Teacher\SinceRow
             until: FKSDB\Components\DatabaseReflection\Tables\Teacher\UntilRow
             number_brochures:
                 type: int
                 title: _(Number of brochures)
                 description: _('Number of brochures/propagation items, that he wants to send.')
             note:
                 type: text
                 title: _(Note)
         task_contribution:
             type:
                type: string
                title: _(Type)
         task:
             modelClassName: FKSDB\ORM\Models\ModelTask
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\ITaskReferencedModel
                method: getTask
             fields:
                 fq_name: FKSDB\Components\DatabaseReflection\Tables\Task\FQNameRow
                 series:
                    type: string
                    title: _(Series)
                 label:
                     type: string
                     title: _(Label)
                 name_cs:
                     type: string
                     title: _(Name cs)
                 task_id:
                     type: primaryKey
                     title: _(Task Id)
                 points:
                     type: string
                     title: _(Points)
                 year:
                     type: string
                     title: _(Year)
         contest:
             modelClassName: FKSDB\ORM\Models\ModelContest
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\IContestReferencedModel
                method: getContest
             fields:
                  contestBadge: FKSDB\Components\DatabaseReflection\ReferencedRows\ContestRow
         school:
             modelClassName: FKSDB\ORM\Models\ModelSchool
             referencedAccess:
                modelClassName: FKSDB\ORM\Models\StoredQuery\ISchoolReferencedModel
                method: getSchool
             fields:
                 school:
                     type: string
                     title: _(School)
                     accessKey: name_abbrev

    links:
        payment.detail:
            destination: ':Event:Payment:detail'
            params:
                eventId: event_id
                id: payment_id
            title: Detail
            model: FKSDB\ORM\Models\ModelPayment
        org.detail:
            destination: ':Org:Org:detail'
            params:
                contestId: contest_id
                id: org_id
            title: Detail
            model: FKSDB\ORM\Models\ModelOrg
        org.edit:
            destination: ':Org:Org:edit'
            params:
                contestId: contest_id
                id: org_id
            title: Edit
            model: FKSDB\ORM\Models\ModelOrg
        contestatnt_base.edit:
            destination: ':Org:Contestant:edit'
            params:
                contestId: contest_id
                id: ct_id
            title: Edit
            model: FKSDB\ORM\Models\ModelContestant
        event_participant.detail: FKSDB\Components\DatabaseReflection\Links\ParticipantDetailLink
        event_participant.list: FKSDB\Components\DatabaseReflection\Links\ParticipantListLink
        fyziklani_team.detail:
            destination: ':Event:TeamApplication:detail'
            params:
                eventId: event_id
                id: e_fyziklani_team_id
            title: Detail
            model: FKSDB\ORM\Models\Fyziklani\ModelFyziklaniTeam
    details:
        fyziklani.submit:
            -
                fields:
                   - fyziklani_submit.fyziklani_submit_id
                   - e_fyziklani_team.opened_submitting
                   - e_fyziklani_team.name
                   - e_fyziklani_team.e_fyziklani_team_id
            -
                headline: Task
                fields:
                   - fyziklani_task.fyziklani_task_id
                   - fyziklani_task.name
                   - fyziklani_task.label
            -
                fields:
                   - fyziklani_submit.points
                   - fyziklani_submit.state
            -
                fields:
                   - fyziklani_submit.created
                   - fyziklani_submit.modified
