transitions:
    tabor:
        machine: FKSDB\Models\Transitions\Machine\EventParticipantMachine
        stateEnum: FKSDB\Models\ORM\Models\EventParticipantStatus
        transitions:
            __init->pending:
                label: _('Create application')
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')

            # create appliction
            pending|auto.invited->invited:
                label: _('Pozvat účastníka')
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                afterExecute:
                    - FKSDB\Models\Email\Tabor\InvitedMailCallback()
            pending|auto.spare->spare:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Pozvat náhradníka')
                afterExecute:
                    - FKSDB\Models\Email\Tabor\SpareMailCallback()

            # reminders
            invited->invited1:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Send first call')
                afterExecute:
                    - FKSDB\Models\Email\Tabor\ReminderMailCallback()
            invited1->invited2:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Send second call')
                afterExecute:
                    - FKSDB\Models\Email\Tabor\ReminderMailCallback()
            spare->spare1:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Send first call')
                afterExecute:
                    - FKSDB\Models\Email\Tabor\ReminderMailCallback()
            spare1->spare2:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Send second call')
                afterExecute:
                    - FKSDB\Models\Email\Tabor\ReminderMailCallback()

            # apply
            invited|invited1|invited2->applied:
                condition: or(FKSDB\Models\Events\Semantics\RegOpen(),FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer'))
                label: _('Potrvrdit učast')
                afterExecute:
                    - FKSDB\Models\Email\Tabor\AppliedMailCallback()
                    - FKSDB\Models\Email\Tabor\OrganizerMailCallback()
            spare|spare1|spare2->interested:
                condition: or(FKSDB\Models\Events\Semantics\RegOpen(),FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer'))
                label: _('Chci jet')
                afterExecute:
                    - FKSDB\Models\Email\Tabor\InterestedMailCallback()
                    - FKSDB\Models\Email\Tabor\OrganizerMailCallback()
            interested->applied:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Schválit jako účastníka')
                afterExecute:
                    - FKSDB\Models\Email\Tabor\AppliedInterestedMailCallback()
                    - FKSDB\Models\Email\Tabor\OrganizerMailCallback()
            applied->paid:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Zaplatil')
                afterExecute:
                    - FKSDB\Models\Email\Tabor\PaidMailCallback()

            # person didn't confirm
            invited|invited1|invited2->spare:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Move to spare')
                validation: false
                behaviorType: danger
                afterExecute:
                    - FKSDB\Models\Email\Tabor\NoConfirmMailCallback()

            # rejected
            invited|invited1|invited2->rejected:
                condition: or(FKSDB\Models\Events\Semantics\RegOpen(),FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer'))
                label: _('Odmítnout účast')
                validation: false
                behaviorType: danger
                afterExecute:
                    - FKSDB\Models\Email\Tabor\OrganizerMailCallback()
            spare|spare1|spare2->rejected:
                condition: or(FKSDB\Models\Events\Semantics\RegOpen(),FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer'))
                label: _('Odmítnout účast')
                validation: false
                behaviorType: warning
                afterExecute:
                    - FKSDB\Models\Email\Tabor\OrganizerMailCallback()
            interested->rejected:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Odmítnout jako účastníka')
                behaviorType: warning
                afterExecute:
                    - FKSDB\Models\Email\Tabor\RejectedMailCallback()
                    - FKSDB\Models\Email\Tabor\OrganizerMailCallback()

            # after event
            applied|paid->participated:
                condition: and(FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer'),FKSDB\Models\Events\Semantics\EventWas())
                label: _('Zúčastnil se')
            applied|paid->missed:
                condition: and(FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer'),FKSDB\Models\Events\Semantics\EventWas())
                label: _('Nepřijel')

            # cancel
            invited|invited1|invited2|auto.invited|spare|spare1|spare2|auto.spare|applied|interested|paid->cancelled:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Zrušit přihlášku')
                behaviorType: danger
