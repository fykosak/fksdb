transitions:
    sous:
        machine: FKSDB\Models\Transitions\Machine\EventParticipantMachine
        stateEnum: FKSDB\Models\ORM\Models\EventParticipantStatus
        transitions:
            # init application
            __init->invited:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Pozvat účastníka')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\InviteMailCallback()
            auto.invited->invited: # this must be duplicate of __init->invited
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Pozvat účastníka')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\InviteMailCallback()
            __init|auto.spare->spare:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Pozvat náhradníka')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\InviteMailCallback()
             # participant decides
            invited|invited1|invited2|invited3->applied:
                condition: or(FKSDB\Models\Events\Semantics\RegOpen(),FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer'))
                label: _('Potrvrdit učast')
            spare|spare1|spare2|spare3->interested:
                condition: FKSDB\Models\Events\Semantics\RegOpen()
                label: _('Chci jet')
            invited|invited1|invited2|invited3->rejected:
                condition: or(FKSDB\Models\Events\Semantics\RegOpen(),FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer'))
                label: _('Odmítnout účast')
                behaviorType: danger
            # reminders
            # 1. reminder
            spare->spare1:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Poslat první upomínku')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\Reminder1MailCallback()
            invited->invited1:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Poslat první upomínku')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\Reminder1MailCallback()
            # 2. reminder
            spare1->spare2:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Poslat druhou upomínku')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\Reminder2MailCallback()
            invited1->invited2:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Poslat druhou upomínku')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\Reminder2MailCallback()
            # 3. reminder
            spare2->spare3:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Poslat třetí upomínku')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\Reminder3MailCallback()
            invited2->invited3:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Poslat třetí upomínku')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\Reminder3MailCallback()

            # spare reject
            spare|spare1|spare2|spare3->rejected:
                condition: or(FKSDB\Models\Events\Semantics\RegOpen(),FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer'))
                label: _('Odmítnout účast')
                behaviorType: danger
            # confirm participation
            interested->applied:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Potvrdit účast')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\InterestedAppliedMailCallback()
            # invite spare
            spare->invited:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Invite as participant')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\SpareInvitedMailCallback()
            spare1->invited1:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Invite as participant')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\SpareInvitedMailCallback()
            spare2->invited2:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Invite as participant')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\SpareInvitedMailCallback()
            spare3->invited3:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Invite as participant')
                afterExecute:
                    - FKSDB\Models\Mail\Sous\SpareInvitedMailCallback()
            # after sous
            applied->participated:
                condition: and(FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer'),FKSDB\Models\Events\Semantics\EventWas())
                label: _('Participated')
            applied->missed:
                condition: and(FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer'),FKSDB\Models\Events\Semantics\EventWas())
                label: _('Missed')

            # used in special cases, when it's undesirable to send reminders (e.g. I'll know at later date, will let you know)
            invited|invited1|invited2|invited3|auto.invited|spare|spare1|spare2|spare3|auto.spare|applied|interested->cancelled:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Cancel application')
            invited|invited1|invited2|invited3|spare|spare1|spare2|spare3|applied|interested->out_of_db:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Deal with outside FKSDB')
            out_of_db->invited:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Invited')
            out_of_db->invited1:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Invited, first call')
            out_of_db->invited2:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Invited, second call')
            out_of_db->invited3:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Invited, last call')
            out_of_db->auto.invited:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Invited (auto)')
            out_of_db->spare:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Spare')
            out_of_db->spare1:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Spare, first call')
            out_of_db->spare2:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Spare, second call')
            out_of_db->spare3:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Spare, last call')
            out_of_db->auto.spare:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Spare (auto)')
            out_of_db->applied:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Applied')
            out_of_db->interested:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Interested')
            out_of_db->participated:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Participated')
            out_of_db->rejected:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as Rejected')
            out_of_db->missed:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as missed')
            out_of_db->cancelled:
                condition: FKSDB\Models\Transitions\Transition\Statements\Conditions\EventRole('organizer')
                label: _('Return to DB as cancelled')
