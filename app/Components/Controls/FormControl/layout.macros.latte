{define errors}
    {var $fieldErrors = []}
    {foreach $form->getControls() as $cont}
        {foreach $cont->getErrors() as $error}
            {php $fieldErrors[$error] = 1}
        {/foreach}
    {/foreach}
    {foreach $form->getErrors() as $error}
        <div n:if="!isset($fieldErrors[$error])" class="alert alert-danger">{$error}</div>
    {/foreach}
{/define}

{define metadata}
    {varType Nette\Forms\Controls\BaseControl $field}
    {foreach $field->getErrors() as $error}
        {continueIf !$error}
        <div class="alert alert-danger">{$error}</div>
    {/foreach}
    {var $description = $field->getOption('description')}
    {if $description}
        <span class="text-muted">{$description}</span>
    {/if}
{/define}

{define plain}
    {varType Nette\Forms\Controls\TextInput $field}
    {switch $field->control->type}
        {case 'range'}
        <div n:attr="(expand) FKSDB\Components\Controls\FormControl\FormControl::buildContainerAttributes($field,'form-range')">
            {label $field/}
            {input $field class: 'form-control ' . $field->getControlPrototype()->class}
            {include metadata field => $field}
        </div>
        {default}
        <div n:attr="(expand) FKSDB\Components\Controls\FormControl\FormControl::buildContainerAttributes($field)">
            {label $field/}
            {input $field class: ($field->getControlPrototype()->type != 'file'?'form-control':'form-control-file') . ' ' . $field->getControlPrototype()->class, 'required'=>null}
            {include metadata field => $field}
        </div>
    {/switch}
{/define}

{define checkbox}
    <div n:attr="(expand) FKSDB\Components\Controls\FormControl\FormControl::buildContainerAttributes($field)">
        <div class="form-check">
            {$field->getControlPart()->setAttribute('class','form-check-input ' . $field->getControlPrototype()->class)}
            {$field->getLabelPart()->setAttribute('class','form-check-label ' . $field->getLabelPrototype()->class)}
        </div>
        {include metadata field => $field}
    </div>
{/define}

{define radiolist}
    {varType Nette\Forms\Controls\RadioList $field}
    <div n:attr="(expand) FKSDB\Components\Controls\FormControl\FormControl::buildContainerAttributes($field)">
        {label $field/}
        {foreach $field->getItems() as $key => $item}
            <div class="form-check mb-3">
                {input $field:$key class: 'form-check-input ' . $field->getControlPrototype()->class}
                {label $field:$key class: 'form-check-label ' . $field->getLabelPrototype()->class/}
            </div>
        {/foreach}
        {include metadata field => $field}
    </div>
{/define}

{define button}
    {varType Nette\Forms\Controls\Button $field}
    {varType string $fieldClass}
    {var $fieldClass = (string)$field->getControlPrototype()->getAttribute('class')}
    {var $fieldClass = preg_replace('/(^|\s)btn($|\s)/', '', $fieldClass)}
    {input $field class:('btn ' . (\Nette\Utils\Strings::contains($fieldClass,'btn-') ? $fieldClass : 'btn-outline-primary'))}
{/define}

{define buttonArray}
    {varType Nette\Forms\Controls\Button[] $buttons}
    {var $buttonRows = []}
    {foreach $buttons as $button}
        {php if(!isset($buttonRows[$button->getOption('row')])) $buttonRows[$button->getOption('row')] = []}
        {php $buttonRows[$button->getOption('row')][] = $button}
    {/foreach}
    {php ksort($buttonRows)}
    {foreach $buttonRows as $row}
        {if $row}
            <div class="col-12">
                {foreach $row as $button}
                    {include button field => $button}
                {/foreach}
            </div>
        {/if}
    {/foreach}
{/define}

{define hidden}
    {varType Nette\Forms\Controls\HiddenField $field}
    <div n:attr="(expand) FKSDB\Components\Controls\FormControl\FormControl::buildContainerAttributes($field)">
        <div n:tag-if="$field->hasErrors()">
            {input $field}
            {include metadata field => $field}
        </div>
    </div>
{/define}


{define controls}
    {varType Nette\Forms\Controls\BaseControl[] $controls}
    {var $buttons = []}
    {foreach $controls as $name => $field}
        {if method_exists($field,'getOption')}
            {continueIf !$field->getOption('visible', true)}
            {if !$field instanceof Nette\Forms\Controls\Button}
                {include buttonArray buttons => $buttons}
                {php $buttons = []}
            {/if}
            {if $field instanceof Nette\Forms\Controls\Checkbox}
                {include checkbox field => $field}
            {elseif $field instanceof Nette\Forms\Controls\HiddenField}
                {include hidden field => $field}
            {elseif $field instanceof Nette\Forms\Controls\RadioList}
                {include radiolist field => $field}
            {elseif $field instanceof Nette\Forms\Controls\Button}
                {php $buttons[] = $field}
            {else}
                {include plain field => $field}
            {/if}
        {/if}
    {/foreach}
    {include buttonArray buttons => $buttons}
{/define}
